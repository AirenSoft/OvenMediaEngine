name: Release Docker Image CI 

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Notify to Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "branch": "${{ github.ref_name }}",
              "tag": "${{ env.TAG }}",
              "state": "Started"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_STATE_NOTIFICATION_SLACK_WEBHOOK_URL }}
      - name: Check out the repo
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: airensoft/ovenmediaengine
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64

      - name: Replace newlines with pipe in tags
        id: clean_tags
        run: |
          cleaned_tags=$(echo "${{ steps.meta.outputs.tags }}" | sed ':a;N;$!ba;s/\n/|/g')
          echo "::set-output name=cleaned_tags::$cleaned_tags"

      - name: Notify to Slack
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "branch": "${{ github.ref_name }}",
              "tag": "${{ steps.clean_tags.outputs.cleaned_tags }}",
              "state": "${{ job.status }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_STATE_NOTIFICATION_SLACK_WEBHOOK_URL }}
